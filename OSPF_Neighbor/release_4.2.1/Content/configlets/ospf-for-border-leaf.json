{
    "id": "4d3854a4-326d-43d9-b672-1c5cb567c707",
    "ref_archs": [
        "two_stage_l3clos"
    ],
    "created_at": "2024-01-18T12:52:31.642410Z",
    "last_modified_at": "2024-01-18T14:16:59.308038Z",
    "display_name": "OSPF_For_Border-Leaf",
    "generators": [
        {
            "config_style": "junos",
            "template_text": "{% set ns = namespace(ospf_interfaces=[]) %}\n\n{% set tagged_interfaces = interface | json_query(\"*.{intfName: intfName, intf_tags: intf_tags, switch_port_mode: switch_port_mode, vrf_name: vrf_name, has_subinterfaces: has_subinterfaces, subinterfaces: subinterfaces}[?intf_tags.contains(@, 'ospf')]\") %}\n\n{% for intf in tagged_interfaces %}\n    {% for sub_intf in intf.subinterfaces %}\n        {% set subintf_name = interface[sub_intf].intfName %}\n        {% set ns.ospf_interfaces = ns.ospf_interfaces + [subintf_name] %}\n    {% endfor %}\n{% endfor %}\n\n\n{% set interface_query = [] %}\n{% for intf in ns.ospf_interfaces %}\n  {% set interface_query = interface_query.append(\"contains(intfName, '\" + intf + \"')\") %}\n{% endfor %}\n{% set tags_jmespath = interface_query | join(' || ') %}\n{% set ospf_interfaces_details = interface | json_query(\"*.{intfName: intfName, vrf_name: vrf_name}[?\" + tags_jmespath + \"]\") %}\n\n\n{% set filtered_interfaces = [] %}\n{% for intf in ospf_interfaces_details %}\n    {% if intf.vrf_name in routing_zones and 'area' in routing_zones[intf.vrf_name] %}\n        {% do filtered_interfaces.append({\n            \"intfName\": intf.intfName,\n            \"vrf_name\": intf.vrf_name,\n            \"area\": routing_zones[intf.vrf_name].area\n        }) %}\n    {% endif %}\n{% endfor %}\n\n{% for routing_zone, routing_zone_details in routing_zones.items() %}\nrouting-instances {\n    {{ routing_zone }} {\n        protocols {\n            ospf {\n                area {{ routing_zone_details.area }} {\n                    {% for intf in filtered_interfaces %}\n                        {% if intf.vrf_name == routing_zone %}\n                    interface {{ intf.intfName }}\n                        {% endif %}\n                    {% endfor %}\n                }\n            }\n        }\n    }\n}\n{% endfor %}",
            "section": "system",
            "negation_template_text": "",
            "filename": ""
        }
    ]
}